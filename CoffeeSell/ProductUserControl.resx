<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picProductImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>